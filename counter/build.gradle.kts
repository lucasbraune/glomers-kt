/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("glomers.kotlin-application-conventions")
    kotlin("plugin.serialization") version "1.9.22"
}

dependencies {
    implementation(project(":utilities"))
    implementation(project(":protocol"))
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0")
}

application {
    // Define the main class for the application.
    mainClass.set("io.github.lucasbraune.glomers.${project.name}.AppKt")
}

val maelstromBinary = project.rootDir.resolve("maelstrom/maelstrom")

tasks.register<Exec>("runMaelstromTest") {
    dependsOn("installDist")
    val installDir = tasks.installDist.get().destinationDir
    val nodeBinary = installDir.resolve("bin/${project.name}")
    commandLine(
        maelstromBinary.absolutePath, "test",
        "-w", "g-counter",
        "--bin", nodeBinary.absolutePath,
        "--node-count", "3",
//        "--rate", "100",
        "--rate", "10",
        "--time-limit", "20",
        "--nemesis", "partition",
    )
}
